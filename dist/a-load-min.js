var a={version:"0.1",options:{debug:!0,log:!0,cdn:"",javascriptpath:"assets/javascripts/",csspath:"assets/stylesheets/"},mng:{_add:function(e,n,t){return"undefined"==typeof n||"undefined"==typeof t?void a.mng._log({Type:e,Message:"Name or value is not set."}):(a[e][n]={},void(a[e][n].filename=t))},_log:function(e){a.options.log?console.log(e):$()},_registercss:function(e,n){if("undefined"==typeof e||"undefined"==typeof n)return a.mng._log({Type:"css",Message:"Name or value is not set."}),this;a.mng._log(["css",e,n]);var t=document.createElement("link"),s=document.getElementsByTagName("head")[0];t.rel="stylesheet",t.href=a.options.csspath+n.filename,s.parentNode.insertBefore(t,s)},_registerplugin:function(e,n){if("undefined"==typeof e||"undefined"==typeof n)return a.mng._log({Type:"plugin",Message:"Name or value is not set."}),this;a.mng._log(["plugin test",e,n]);var t=$.Deferred(),s=document.createElement("script");s.async="async",s.src=a.options.cdn+a.options.javascriptpath+n.filename,s.onload=s.onreadystatechange=function(e,n){(!s.readyState||/loaded|complete/.test(s.readyState))&&(n?t.reject():t.resolve())},s.onerror=function(){t.reject()},head=document.getElementsByTagName("head")[0],head.parentNode.insertBefore(s,head),a.data.promises.push(t.promise())},registerCSS:function(e,n){a.mng._add("css",e,n)},registerPlugin:function(e,n){a.mng._add("plugins",e,n)},registerFunction:function(e,n){a.mng._add("functions",e,n)}},functions:{},plugins:{},css:{},data:{},init:function(){$(window).ready(function(){a.data.promises=[],$.when($.each(a.plugins,function(e,n){a.mng._registerplugin(e,n)})),$.when($.each(a.css,function(e,n){a.mng._registercss(e,n)})),$.when.apply($,a.data.promises).done(function(){$.each(a.functions,function(e,n){n(),a.mng._log([e,n])})})})}};